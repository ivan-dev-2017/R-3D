load("C:\\Users\\Lion\\Desktop\\R\\.RData")
library(lattice)
n <- seq(5, 45, 5)
n
x <- rnorm(sum(n))
x
y <- factor(rep(n, n), labels=paste("n =", n))
densityplot(˜ x | y,
panel = function(x, ...) {
panel.densityplot(x, col="DarkOliveGreen", ...)
panel.mathdensity(dmath=dnorm,
args=list(mean=mean(x), sd=sd(x)),
col="darkblue")
})
y <- factor(rep(n, n), labels=paste("n =", n))
densityplot(˜ x | y,
panel = function(x, ...) {
panel.densityplot(x, col="DarkOliveGreen", ...)
panel.mathdensity(dmath=dnorm,
args=list(mean=mean(x), sd=sd(x)),
col="blue")
})
y <- factor(rep(n, n), labels=paste("n =", n))
y
densityplot(˜ x | y,
panel = function(x, ...) {
panel.densityplot(x, col="DarkOliveGreen", ...)
panel.mathdensity(dmath=dnorm,
args=list(mean=mean(x), sd=sd(x)),
col="blue")
})
densityplot(˜ x | y,
panel = function(x, ...) {
panel.densityplot(x, col="DarkOliveGreen", ...)
panel.mathdensity(dmath=dnorm,args=list(mean=mean(x), sd=sd(x)),
col="blue")
})
plot(x, y)
library(help=eda)
library(help=lattice)
q()
ls()
head(misdatos)
cabecera <- ("Particula","MomentoLx","MomentoLy","MomentoLz","DistanciaX","DistanciaY,"TiempoVuelo(ns)","EnergíaTotal(Gev)")
cabecera <- v("Particula","MomentoLx","MomentoLy","MomentoLz","DistanciaX","DistanciaY,"TiempoVuelo(ns)","EnergíaTotal(Gev)")
cabecera <- c("Particula","MomentoLx","MomentoLy","MomentoLz","DistanciaX","DistanciaY,"TiempoVuelo(ns)","EnergíaTotal(Gev)")
c("Particula","MomentoLx","MomentoLy","MomentoLz","DistanciaX","DistanciaY,"TiempoVuelo(ns)","EnergíaTotal(Gev)")
cabecera <- c("Particula","MomentoLx","MomentoLy","MomentoLz","DistanciaX","DistanciaY","TiempoVuelo(ns)","EnergíaTotal(Gev)")
cabecera
getwd()cabecera <- c("Particula","MomentoLx","MomentoLy","MomentoLz","DistanciaX","DistanciaY","TiempoVuelo(ns)","EnergíaTotal(Gev)")
getwd()
setwd("C:/Users/Lion/Desktop/R")
misdatos <- read.table("muchosdatos.dat", header = FALSE, sep = "", quote = "'",dec = ".", numerals = c("allow.loss", "warn.loss", "no.loss"),
            row.names , col.names = cabecera, as.is = !stringsAsFactors, na.strings = "NA", colClasses = NA, nrows = -1, 
skip = 0, check.names = TRUE, fill = !blank.lines.skip,
            strip.white = FALSE, blank.lines.skip = TRUE, comment.char = "#", allowEscapes = FALSE, flush = FALSE,
            stringsAsFactors = default.stringsAsFactors(), fileEncoding = "", encoding = " UTF-8", text, skipNul = FALSE)
misdatos <- read.table("muchosdatos.dat", header = FALSE, sep = "", quote = "'",dec = ".", numerals = c("allow.loss", "warn.loss", "no.loss"),
            row.names , col.names = cabecera, as.is = !stringsAsFactors, na.strings = "NA", colClasses = NA, nrows = -1, 
skip = 0, check.names = TRUE, fill = FALSE,
            strip.white = FALSE, blank.lines.skip = TRUE, comment.char = "#", allowEscapes = FALSE, flush = FALSE,
            stringsAsFactors = default.stringsAsFactors(), fileEncoding = "", encoding = " UTF-8", text, skipNul = FALSE)
misdatos <- read.table("muchosdatos.dat", header = FALSE, sep = "", quote = "'",dec = ".", numerals = c("allow.loss", "warn.loss", "no.loss"),
            row.names , col.names = cabecera, as.is = !stringsAsFactors, na.strings = "NA", colClasses = NA, nrows = -1, 
skip = 0, check.names = TRUE, fill = FALSE,
            strip.white = FALSE, blank.lines.skip = TRUE, comment.char = "#", allowEscapes = FALSE, flush = FALSE,
            stringsAsFactors = FALSE , fileEncoding = "", encoding = " UTF-8", text, skipNul = FALSE)
misdatos <- read.table("muchosdatos.dat", header = FALSE, sep = "", quote = "'",dec = ".", numerals = c("allow.loss", "warn.loss", "no.loss"),
            row.names , col.names = cabecera, as.is = !stringsAsFactors, na.strings = "NA", colClasses = NA, nrows = -1, 
skip = 0, check.names = TRUE, fill = FALSE,
            strip.white = FALSE, blank.lines.skip = TRUE, comment.char = "#", allowEscapes = FALSE, flush = FALSE,
            fileEncoding = "", encoding = " UTF-8", text, skipNul = FALSE)
misdatos <- read.table("muchosdatos.dat", header = FALSE, sep = "", quote = "'",dec = ".", numerals = c("allow.loss", "warn.loss", "no.loss"),
            row.names , col.names = cabecera, as.is = FALSE, na.strings = "NA", colClasses = NA, nrows = -1, 
skip = 0, check.names = TRUE, fill = FALSE,
            strip.white = FALSE, blank.lines.skip = TRUE, comment.char = "#", allowEscapes = FALSE, flush = FALSE,
            stringsAsFactors = default.stringsAsFactors(), fileEncoding = "", encoding = " UTF-8", text, skipNul = FALSE)
misdatos <- read.table("muchosdatos.dat", header = FALSE, sep = "", quote = "'",dec = ".", numerals = c("allow.loss", "warn.loss", "no.loss"),
            row.names = NULL, col.names = cabecera, as.is = FALSE, na.strings = "NA", colClasses = NA, nrows = -1, 
skip = 0, check.names = TRUE, fill = FALSE,
            strip.white = FALSE, blank.lines.skip = TRUE, comment.char = "#", allowEscapes = FALSE, flush = FALSE,
            stringsAsFactors = default.stringsAsFactors(), fileEncoding = "", encoding = " UTF-8", text, skipNul = FALSE)
head(misdatos)
misdatos[1,2]
dev.list()
 dev.cur()
x <- misdatos[,2]
head(x)
y <- misdatos[,3]
plot(x, y)
lenght(x)
length(x)
length(y)
mode(x)
x <- misdatos[1:10,2]
x
x <- misdatos[1:1000,2]
y <- misdatos[1:1000,3]
length(y)
plot(x,y)
x <- misdatos[1:10000,2]
y <- misdatos[1:10000,3]
plot(x,y)
dev.list()
densityplot(˜ x | y, panel = function(x, ...) {
panel.densityplot(x, col="DarkOliveGreen", ...)
panel.mathdensity(dmath=dnorm,args=list(mean=mean(x), sd=sd(x)),
col="blue")
})
library(lattice)
densityplot(˜ x | y, panel = function(x, ...) {
panel.densityplot(x, col="DarkOliveGreen", ...)
panel.mathdensity(dmath=dnorm,args=list(mean=mean(x), sd=sd(x)),
col="blue")
densityplot(˜ x | y, panel = function(x, ...) {
panel.densityplot(x, col="DarkOliveGreen", ...)
panel.mathdensity(dmath=dnorm,args=list(mean=mean(x), sd=sd(x)),
col="blue")
})
x3d=seq(-3,3,length=100)
y3d=seq(-3,3,length=100)
parabola=function(x,y) x^2+y^2
z3d=outer(x, y, parabola)
z3d=outer(x3d, y3d, parabola)
persp(x,y,z)
persp(x3d,y3d,z3d)
persp(x3d,y3d,z3d,phi=30)
persp(x3d,y3d,z3d,phi=60)
persp(x3d,y3d,z3d,phi=60,theta=20)
persp(x3d,y3d,z3d,phi=10,theta=20)
parabola=function(x3d,y3d) x3d^2+y3d^2
z3d=outer(x3d, y3d, parabola)
persp(x3d,y3d,z3d,phi=0,theta=0)
persp(x3d,y3d,z3d,phi=20,theta=0)
persp(x3d,y3d,z3d,phi=20,theta=30)
persp(x,y,z,phi=20,theta=30)
persp(x3d,y3d,z3d,phi=20,theta=30,col="pink")
persp(x3d,y3d,z3d,phi=20,theta=30,col="pink",expand = 0.9)
persp(x3d,y3d,z3d,phi=20,theta=30,col="pink",expand = 0.1)
ecuacionParab <- expression(z3d == x3d^2 + y3d^2)
persp(x3d,y3d,z3d,phi=20,theta=30,col="pink",expand = 0.1,main="Paraboloide", sub=ecuacionParab, col.main="green")
persp(x3d,y3d,z3d,phi=20,theta=30,col="pink",expand = 0.0,main="Paraboloide", sub=ecuacionParab, col.main="green")
persp(x3d,y3d,z3d,phi=20,theta=30,col="pink",expand = 1,main="Paraboloide", sub=ecuacionParab, col.main="green")
persp(x3d,y3d,z3d,phi=20,theta=30,col="pink",expand = 1,main="Paraboloide", sub=ecuacionParab, col.main="green",scale=FALSE, border=NA)
persp(x3d,y3d,z3d,phi=20,theta=30,col="pink",expand = 1,main="Paraboloide", sub=ecuacionParab, col.main="green",scale=FALSE, border=NA,shade=0.5)
persp(x3d,y3d,z3d,phi=20,theta=30,col="pink",expand = 1,main="Paraboloide", sub=ecuacionParab, col.main="green",scale=TRUE, border=NA,shade=0.5)
image(x3d,y3d,z3d)
contour(x3d,y3d,z3d,add=T)
image(x3d,y3d,z3d)
contour(x3d,y3d,z3d,add=T)
library( rgl )
library( rgl )
q()
